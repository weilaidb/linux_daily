Android内存泄漏优化总结
什么是内存？
Android中的内存是手机的RAM。主要包括以下几个部分：
1.寄存器
位于CPU内部，速度最快
2.栈
用于存放基本类型以及引用变量。
3.堆
主要用于存放数组和new出来的对象，它由垃圾回收器进行管理(GC).对内存的优化也是处理的堆内存。
4.静态存储区
存储应用运行一直存放的数据(static变量)
5.常量池
存放定义的常量(static final)

说明：局部变量的基本数据类型和引用存储于栈中，引用的对象实体存储于堆中。————因为它们属于方法中的变量，生命周期随方法而结束。
成员变量全部存储与堆中（包括基本数据类型，引用和引用的对象实体）————因为它们属于类，类对象终究是要被new出来使用的。
JAVA引用的分类
上节中提到引用的概念，JAVA中的引用分为4种:
1.强引用 。对于这类引用GC任何时候不会对其进行内存回收，在内存不足的情况下宁愿抛出Out of Memory(OOM内存溢出)。类似这样的都是强引用:
private final MessageReceived mMessageReceived = new MessageReceived(this);
2.软引用。内存不足的时候回收该引用关联的对象。使用SoftReference修饰的是软引用类似如下所示：
SoftReference<User> sr = new SoftReference<User>(new User("1","2"));
3.弱引用。垃圾回收时，无论内存是否足够，对该类引用所关联的对象全部进行内存回收。使用WeakReference修饰的是弱引用，类似如下所示：
sCtx = new WeakReference<Context>(context).get();






























